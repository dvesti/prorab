[{"categories":["Poetry"],"contents":"Не лишили бы корыта,\nНе отбросил бы копыта\u0026hellip;\n","permalink":"https://dvesti.github.io/prorab/kopyta/","tags":["life"],"title":"Корыто и копыта"},{"categories":["blog"],"contents":"Меняю стили каждый день, как я и писал ранее, в ущерб написанию заметок.\nСейчас всё-таки изменил размер шрифта даты, который был связан с другими стилями, поэтому пришлось выделить в отдельные строки.\nИспользовал стили оригинала — Refined, а также Jane\nМенять пришлось и курсив, так как он брался из другого шрифта получался другого размера (в частности, меньше), что было не очень красиво.\nНе считаю себя специалистом по дизайну или внешнему виду и стилям, но стараюсь привести сайт-блог к такому виду, чтобы нравилось самому. Например, чуть больший шрифт, чтоб не щуриться.\nМежду тем, структура (скелет) сайта адаптирована для мобильных устройств: очень интересно читать сайт, имитируя СмартФон, сужая окно просмотра по горизонтали.\n Curabitur blandit tempus porttitor. Nullam quis risus eget urna mollis ornare vel eu leo. Nullam id dolor id nibh ultricies vehicula ut id elit.\nЭто какой-то текст для примера, чтобы показать как выглядит цитата.\nЭто или Источник или высказывания Великих людей. Да, и –- вообще\u0026hellip;\n Изменил внешний вид цитаты, убрал отображение тэгов и категорий на странице Архива. По секрету: на сайте есть страница и тэгов и категорий, просто не указана в меню. При необходимых минимальных навыках, эти странички можно отыскать самому\n","permalink":"https://dvesti.github.io/prorab/slyle-230820/","tags":["font","style","quote"],"title":"Стили от 23-08-2020"},{"categories":["poetry"],"contents":"Почему такой ты робкий?\nПотому что я в коробке?\nНе стесняйся и – погладь:\nБудешь ночью крепче спать!\n","permalink":"https://dvesti.github.io/prorab/poglad-menja/","tags":["cat","image"],"title":"Погладь меня"},{"categories":["blog"],"contents":"Это тестовое сообщение с этой картинкой:\nкоторая отображается при пересылке ссылки, например, в Скайп\n","permalink":"https://dvesti.github.io/prorab/test-1/","tags":["test"],"title":"Тест-1"},{"categories":["poetry"],"contents":"\r Если быстро не отскочишь, –\nЯ ж не плюшевый клубочек, –\nДаже если не захочешь,\nПокажу кунг-фы кусочек\n","permalink":"https://dvesti.github.io/prorab/kung-fu-cat/","tags":["cat","image"],"title":"Кунг-Фу-Кэт"},{"categories":["poetry"],"contents":"Синхронно, сидя на окошке,\nСебя вылизывают кошки\n","permalink":"https://dvesti.github.io/prorab/synchron-cats/","tags":["cat","image"],"title":"Синхронное умывание"},{"categories":["poetry"],"contents":"Если я разоблачён, –\nНадо зафиксировать!\nЕсли тема ни-о-чём:\nНужно ли позировать?\n","permalink":"https://dvesti.github.io/prorab/razoblachenie/","tags":["cat","image"],"title":"Разоблачение"},{"categories":["blog"],"contents":"Почему выбрана именно эта Тема для блога? Refined – одна из немногих тем, где правильно работает Поиск по русским словам.\nДля чего Блог? Как и написано в названии, здесь буду писать небольшие заметки. Возможно, каждодневные.\nБудет ли внешний вид сайта меняться? Именно этим я и занимаюсь, в ущерб самим заметкам.\nМеняется шрифт. К сожалению, англоязычные, по умолчанию на сайте установленные, отсутствуют в русском секторе. Приходится менять, стараясь не сильно ухудшать стиль всего сайта.\nРаботы много, но, наверно, это будет делаться постепенно. Т.е. в процессе ведения самого блога\nP.S. Выручило это дополнение в файле themes/refined/layouts/partials/head.html\n1  \u0026lt;link href=\u0026#34;https://fonts.googleapis.com/css?family=Merriweather:400,700|Oswald\u0026#34; rel=\u0026#34;stylesheet\u0026#34; type=\u0026#34;text/css\u0026#34;\u0026gt;    Все желаемые стили встали на свои места: иначе не подхватывало и указывало шрифт по умолчанию (т.е. первоначально-предусмотренный при создании самой темы)\n","permalink":"https://dvesti.github.io/prorab/theme-refined/","tags":["theme","hugo","design"],"title":"Тема – Refined"},{"categories":["blog"],"contents":"I write my blog posts in Markdown and I use VSCode editor for that.\nЯ пишу свои блог-посты в Markdown и использую для этого редактор VS Code.\nИ это \u0026ndash; правильно!\nИ это \u0026ndash; не только моё мнение.\n","permalink":"https://dvesti.github.io/prorab/i-write-my-blog-posts-in-markdown/","tags":["test"],"title":" I write my blog posts in Markdown"},{"categories":["docs","blog"],"contents":"What a Shortcode is Hugo loves Markdown because of its simple content format, but there are times when Markdown falls short. Often, content authors are forced to add raw HTML (e.g., video \u0026lt;iframes\u0026gt;) to Markdown content. We think this contradicts the beautiful simplicity of Markdown\u0026rsquo;s syntax.\nHugo created shortcodes to circumvent these limitations.\nA shortcode is a simple snippet inside a content file that Hugo will render using a predefined template. Note that shortcodes will not work in template files. If you need the type of drop-in functionality that shortcodes provide but in a template, you most likely want a [partial template][partials] instead.\nIn addition to cleaner Markdown, shortcodes can be updated any time to reflect new classes, techniques, or standards. At the point of site generation, Hugo shortcodes will easily merge in your changes. You avoid a possibly complicated search and replace operation.\nMore details: https://gohugo.io/content-management/shortcodes/\nblockquotes Normal quote:  This is a simple quote.\n    Quote with author:  This is a quote with only an Author named Author2.\n Author2   Quote with author and source:  This is a quote from Author3 and source \u0026ldquo;source.\u0026rdquo;\n Author3 Source   Quote with author and link:  This is a quote from Author4 and links to https://www.google.com.\n Author4  google.com    Quote with author, link and title:  This is a quote from Author5 and links to https://www.google.com with title \u0026ldquo;Google.\u0026rdquo;\n Author5  Google    Quote with author and a link longer than 32 characters, string is first cut at 32 characters then everything after the last forward slash is removed  This is a quote from Author5 and links to https://twitter.com/CryptoGangsta/status/716427930126196737 which is longer than 32 characters. And this is a new line in the quote with the HTML br tag.\n Author6  twitter.com/CryptoGangsta/...    Test from the Octopress blockquote page at: http://octopress.org/docs/plugins/blockquote/  Over the past 24 hours I\u0026rsquo;ve been reflecting on my life \u0026amp; I\u0026rsquo;ve realized only one thing. I need a medieval battle axe.\n @allanbranch  twitter.com/allanbranch/status/...    music gist We can embed the gist in our content via username and gist ID pulled from the URL:\n{{\u0026lt; gist spf13 7896402 \u0026gt;}} Display:\n expand The Expand shortcode displays an expandable/collapsible section of text on your page. Here is an example\n Is this learn theme rocks ?  Yes !.  Usage this shortcode takes exactly one optional parameter to define the text that appears next to the expand/collapse icon. (default is “Click to expand”)\n{{\u0026lt; expand \u0026quot;Is this learn theme rocks ?\u0026quot; \u0026gt;}} Yes !. {{\u0026lt; /expand \u0026gt;}} youtube   vimeo   youku   twitter Hugo 0.24 Released: Big archetype update + @Netlify _redirects etc. file supporthttps://t.co/X94FmYDEZJ #gohugo #golang @spf13 @bepsays\n\u0026mdash; GoHugo.io (@GoHugoIO) June 21, 2017\r\r2 \rThe power was out so we took a walk, and I have never seen so many people out standing around in our neighborhood.\n\u0026mdash; Ardith Betz (@ardithbetz) August 10, 2016   3 \r 4-comment \rYeah I agree with this point for sure. I think multi stage builds in Docker are a very important piece of the puzzle. And that doesn’t quite map to what the Lambda team is doing with layers yet\n\u0026mdash; Nathan Peck (@nathankpeck) December 3, 2018   5-Prorab \r23.04.2020 -- 49. Estonian Championship выиграл Dmitriev, Vladimirhttps://t.co/FdRjYwgkf2\n\u0026mdash; Vladimir Dmitrijev (@Prorab) May 1, 2020  ","permalink":"https://dvesti.github.io/prorab/shortcodes-preview/","tags":["preview","shortcodes"],"title":"Shortcodes Preview"},{"categories":["docs","blog"],"contents":"Не все шорккоды работают корректно. Скорее всего из-за их отсутствия: будем искать и исправлять пост.\nДополнено: Поменял % % на \u0026lt; \u0026gt; и дело пошло\u0026hellip;\nnormal use Note example:\n{{\u0026lt; notice note \u0026gt;}} \u0026lt;p\u0026gt;A notice disclaimer\u0026lt;/p\u0026gt; {{\u0026lt; /notice \u0026gt;}} Result:\nnote  A notice disclaimer\n You could custom title Примечание example:\n{{\u0026lt; notice note Примечание \u0026gt;}} \u0026lt;p\u0026gt;A notice disclaimer\u0026lt;/p\u0026gt; {{\u0026lt; /notice \u0026gt;}} Result:\nПримечание  A notice disclaimer\n tip {{\u0026lt; notice tip \u0026gt;}} \u0026lt;p\u0026gt;A tip disclaimer\u0026lt;/p\u0026gt; {{\u0026lt; /notice \u0026gt;}} Result:\ntip  A tip disclaimer\n info {{\u0026lt; notice info \u0026gt;}} \u0026lt;p\u0026gt;A info disclaimer\u0026lt;/p\u0026gt; {{\u0026lt; /notice \u0026gt;}} Result:\ninfo  An information disclaimer\n warning {{\u0026lt; notice warning \u0026gt;}} \u0026lt;p\u0026gt;A warning disclaimer\u0026lt;/p\u0026gt; {{\u0026lt; /notice \u0026gt;}} Result:\nwarning  An warning disclaimer\n","permalink":"https://dvesti.github.io/prorab/shortcode-notice/","tags":["preview","shortcodes"],"title":"Shortcodes Notice Preview"},{"categories":["blog"],"contents":"Markdown is created by Daring Fireball, the original guideline is here. Its syntax, however, varies between different parsers or editors.\nPlease note that HTML fragments in markdown source will be recognized but not parsed or rendered. Also, there may be small reformatting on the original markdown source code after saving.\nParagraph and line breaks A paragraph is simply one or more consecutive lines of text. In markdown source code, paragraphs are separated by more than one blank lines. In Typora, you only need to press Return to create a new paragraph.\nPress Shift + Return to create a single line break. However, most markdown parser will ignore single line break, to make other markdown parsers recognize your line break, you can leave two whitespace at the end of the line, or insert \u0026lt;br/\u0026gt;.\nHeaders Headers use 1-6 hash characters at the start of the line, corresponding to header levels 1-6. For example:\n# This is an H1 ## This is an H2 ###### This is an H6 In typora, input ‘#’s followed by title content, and press Return key will create a header.\nBlockquotes Markdown uses email-style \u0026gt; characters for block quoting. They are presented as:\n This is a blockquote with two paragraphs. This is first paragraph.\nThis is second pragraph.Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.\nThis is another blockquote with one paragraph. There is three empty line to seperate two blockquote.\n这是一段中文测试。\n In typora, just input ‘\u0026gt;’ followed by quote contents a block quote is generated. Typora will insert proper ‘\u0026gt;’ or line break for you. Block quote inside anther block quote is allowed by adding additional levels of ‘\u0026gt;’.\nLists Input * list item 1 will create an un-ordered list, the * symbol can be replace with + or -.\nInput 1. list item 1 will create an ordered list, their markdown source code is like:\n Red Green Blue   Red Green Blue  Task List Task lists are lists with items marked as either [ ] or [x] (incomplete or complete). For example:\n a task list item list syntax required normal formatting, @mentions, #1234 refs incomplete completed  You can change the complete/incomplete state by click the checkbox before the item.\nSyntax Highlighting 1 2 3  function helloWorld () { alert(\u0026#34;Hello, World!\u0026#34;) }   1 2 3 4 5  public class HelloWorld { public static void main(String[] args) { System.out.println(\u0026#34;Hello, World!\u0026#34;); } }   Math Blocks You can render LaTeX mathematical expressions using MathJax.\nInput $$, then press \u0026lsquo;Return\u0026rsquo; key will trigger an input field which accept Tex/LaTex source. Following is an example: $$ \\mathbf{V}_1 \\times \\mathbf{V}_2 = \\begin{vmatrix} \\mathbf{i} \u0026amp; \\mathbf{j} \u0026amp; \\mathbf{k} \\\n\\frac{\\partial X}{\\partial u} \u0026amp; \\frac{\\partial Y}{\\partial u} \u0026amp; 0 \\\n\\frac{\\partial X}{\\partial v} \u0026amp; \\frac{\\partial Y}{\\partial v} \u0026amp; 0 \\\n\\end{vmatrix} $$\nIn markdown source file, math block is LaTeX expression wrapped by ‘$$’ mark:\n1 2 3 4 5 6 7  $$ \\mathbf{V}_1 \\times \\mathbf{V}_2 = \\begin{vmatrix} \\mathbf{i} \u0026amp; \\mathbf{j} \u0026amp; \\mathbf{k} \\\\ \\frac{\\partial X}{\\partial u} \u0026amp; \\frac{\\partial Y}{\\partial u} \u0026amp; 0 \\\\ \\frac{\\partial X}{\\partial v} \u0026amp; \\frac{\\partial Y}{\\partial v} \u0026amp; 0 \\\\ \\end{vmatrix} $$   Tables Input | First Header | Second Header | and press return key will create a table with two column.\nAfter table is created, focus on that table will pop up a toolbar for table, where you can resize, align, or delete table. You can also use context menu to copy and add/delete column/row.\nFollowing descriptions can be skipped, as markdown source code for tables are generated by typora automatically.\nIn markdown source code, they look like:\n1 2 3 4 5 6 7  | Name | Markdown | HTML tag | | ----------------- | ------------------- | -------------------- | | *Emphasis* | `*Emphasis*` | `\u0026lt;em\u0026gt;\u0026lt;/em\u0026gt;` | | **Strong** | `**Strong**` | `\u0026lt;strong\u0026gt;\u0026lt;/strong\u0026gt;` | | `code` | ``code`` | `\u0026lt;code\u0026gt;\u0026lt;/code\u0026gt;` | | ~~Strikethrough~~ | `~~Strikethrough~~` | `\u0026lt;del\u0026gt;\u0026lt;/del` | | \u0026lt;u\u0026gt;Underline\u0026lt;/u\u0026gt; | `\u0026lt;u\u0026gt;underline\u0026lt;/u\u0026gt;` | `\u0026lt;u\u0026gt;\u0026lt;/u\u0026gt;` |   Результат:    Name Markdown HTML tag     Emphasis *Emphasis* \u0026lt;em\u0026gt;\u0026lt;/em\u0026gt;   Strong **Strong** \u0026lt;strong\u0026gt;\u0026lt;/strong\u0026gt;   code `code` \u0026lt;code\u0026gt;\u0026lt;/code\u0026gt;   Strikethrough ~~Strikethrough~~ \u0026lt;del\u0026gt;\u0026lt;/del   Underline \u0026lt;u\u0026gt;underline\u0026lt;/u\u0026gt; \u0026lt;u\u0026gt;\u0026lt;/u\u0026gt;    Footnotes 1 2 3  You can create footnotes like this[^footnote]. [^footnote]: Here is the *text* of the **footnote**.   will produce:\nYou can create footnotes like this1.\nMouse on the ‘footnote’ superscript to see content of the footnote.\nHorizontal Rules Input *** or --- on a blank line and press return will draw a horizontal line.\n Links Markdown supports two style of links: inline and reference.\nIn both styles, the link text is delimited by [square brackets].\nTo create an inline link, use a set of regular parentheses immediately after the link text’s closing square bracket. Inside the parentheses, put the URL where you want the link to point, along with an optional title for the link, surrounded in quotes. For example:\nThis is [an example](http://example.com/ \u0026quot;Title\u0026quot;) inline link. [This link](http://example.net/) has no title attribute. will produce:\nThis is an example inline link. (\u0026lt;p\u0026gt;This is \u0026lt;a href=\u0026quot;http://example.com/\u0026quot; title=\u0026quot;Title\u0026quot;\u0026gt;)\nThis link has no title attribute. (\u0026lt;p\u0026gt;\u0026lt;a href=\u0026quot;http://example.net/\u0026quot;\u0026gt;This link\u0026lt;/a\u0026gt; has no)\nInternal Links You can set the href to headers, which will create a bookmark that allow you to jump to that section after clicking. For example:\nCommand(on Windows: Ctrl) + Click This link will jump to header Block Elements. To see how to write that, please move cursor or click that link with ⌘ key pressed to expand the element into markdown source.\nReference Links Reference-style links use a second set of square brackets, inside which you place a label of your choosing to identify the link:\nThis is [an example][id] reference-style link. Then, anywhere in the document, you define your link label like this, on a line by itself: [id]: http://example.com/ \u0026quot;Optional Title Here\u0026quot; In typora, they will be rendered like:\nThis is an example reference-style link.\nThe implicit link name shortcut allows you to omit the name of the link, in which case the link text itself is used as the name. Just use an empty set of square brackets — e.g., to link the word “Google” to the google.com web site, you could simply write:\n[Google][] And then define the link: [Google]: http://google.com/ In typora click link will expand it for editing, command+click will open the hyperlink in web browser.\nURLs Typora allows you to insert urls as links, wrapped by \u0026lt;brackets\u0026gt;.\n\u0026lt;i@typora.io\u0026gt; becomes i@typora.io.\nTypora will aslo auto link standard URLs. e.g: www.google.com.\nImages Image looks similar with links, but it requires an additional ! char before the start of link. Image syntax looks like this:\n![Alt text](/path/to/img.jpg) ![Alt text](/path/to/img.jpg \u0026quot;Optional title\u0026quot;) You are able to use drag \u0026amp; drop to insert image from image file or we browser. And modify the markdown source code by clicking on the image. Relative path will be used if image is in same directory or sub-directory with current editing document when drag \u0026amp; drop.\nFor more tips on images, please read http://support.typora.io//Images/\nEmphasis Markdown treats asterisks (*) and underscores (_) as indicators of emphasis. Text wrapped with one * or _ will be wrapped with an HTML \u0026lt;em\u0026gt; tag. E.g:\n*single asterisks* _single underscores_ output:\nsingle asterisks\nsingle underscores\nGFM will ignores underscores in words, which is commonly used in code and names, like this:\n wow_great_stuff\ndo_this_and_do_that_and_another_thing.\n To produce a literal asterisk or underscore at a position where it would otherwise be used as an emphasis delimiter, you can backslash escape it:\n\\*this text is surrounded by literal asterisks\\* Typora recommends to use * symbol.\nStrong double *’s or _’s will be wrapped with an HTML \u0026lt;strong\u0026gt; tag, e.g:\n**double asterisks** __double underscores__ output:\ndouble asterisks\ndouble underscores\nTypora recommends to use ** symbol.\nCode To indicate a span of code, wrap it with backtick quotes (`). Unlike a pre-formatted code block, a code span indicates code within a normal paragraph. For example:\n1  Use the `printf()` function.   will produce:\nUse the printf() function.\nStrikethrough GFM adds syntax to create strikethrough text, which is missing from standard Markdown.\n~~Mistaken text.~~ becomes Mistaken text.\nUnderline Underline is powered by raw HTML.\n\u0026lt;u\u0026gt;Underline\u0026lt;/u\u0026gt; becomes Underline.\nEmoji :happy Input emoji with syntax 😄.\nUser can trigger auto-complete suggestions for emoji by pressing ESC key, or trigger it automatically after enable it on preference panel. Also, input UTF8 emoji char directly from Edit -\u0026gt; Emoji \u0026amp; Symbols from menu bar is also supported.\nInline Math To use this feature, first, please enable it in Preference Panel -\u0026gt; Markdown Tab. Then use $ to wrap TeX command, for example: $\\lim_{x \\to \\infty} \\exp(-x) = 0$ will be rendered as LaTeX command.\nTo trigger inline preview for inline math: input “$”, then press ESC key, then input TeX command, a preview tooltip will be visible like below:\nHTML в MarkDown \u0026ndash; не работает (есть свои хитрости)\nIt works!Ниже записано средствами самого MarkDown\n![Картинка](https://typora.io/img/inline-math.gif)   Here is the text of the footnote. \u0026#x21a9;\u0026#xfe0e;\n  ","permalink":"https://dvesti.github.io/prorab/jane-theme-preview/","tags":["preview","shortcodes"],"title":"Jane Theme Preview"},{"categories":["blog"],"contents":"While generating a simple favicon for this blog, I went through a little exercise on how to generate a favicon with transparent background. I did not want the favicon with square block background which runs a risk of not blending well with the browser tab background as seen below:\nInkscape and transparent png Here are the steps I took to make this icon transparent. I used Inkscape and Dynamic Drive\u0026rsquo;s online favicon generator to make this happen.\n Inkscape sets the background of the image to be transparent by default. But here is how to verify that that\u0026rsquo;s the case. Do Ctrl+ Shift+ dor Files \u0026gt; Document Properties, click on the Background color and ensure that the Alpha component of RGBA Hex is 00.  This next step when saving the image is crucial. Do not simply Save or Save As the image. That will not save the transparent properties in the image!  Thanks to this graphicdesign.stackexchange solution,\n Just using save as -\u0026gt; png does not apply the transparent background. However, the transparent background is the default when you export: File \u0026gt; Export Bitmap -\u0026gt; Export.\n In newer Inkscape versions (at least in version 0.91), that option is File \u0026gt; Export PNG Image (or Ctrl+ Shift+ e) instead. Note that when you do that, instead of a pop-up window, you will see an attached window (shown below) appear on the side.\n.png or .ico Another question I faced when working on this was whether I should save the favicon as a .png or .ico because I have seen both of these types being used.\nThanks to this stackoverflow solution,\n All modern browsers (tested with Chrome 4, Firefox 3.5, IE8, Opera 10 and Safari 4) will always request a favicon.ico unless you\u0026rsquo;ve specified a shortcut icon via \u0026lt;link\u0026gt;.\n The answer also says that .ico files support transparency just fine and that\u0026rsquo;s where I learned about Dynamic Drive\u0026rsquo;s favicon generator tool.\nSummary  Created a transparent .png in Inkscape. Converted it to .ico using Dynamic Drive\u0026rsquo;s favicon generator tool. And the result!    Update - Oct 20 2016 Today I was browsing this site on my Android phone and I noticed that the Google Chrome browser did not show this favicon on the list of recently visited websites.\nThat bugged me and a little bit of googling led me to an even better online favicon generator website: realfavicongenerator.net.\nI simply needed to upload my Inkscape created .png (with transparent background) to that site, and it provided a favicon package for different platforms and an HTML code to be put in the \u0026lt;head\u0026gt;:\n1 2 3 4 5 6  \u0026lt;link rel=\u0026#34;apple-touch-icon\u0026#34; sizes=\u0026#34;180x180\u0026#34; href=\u0026#34;/apple-touch-icon.png\u0026#34;\u0026gt; \u0026lt;link rel=\u0026#34;icon\u0026#34; type=\u0026#34;image/png\u0026#34; href=\u0026#34;/favicon-32x32.png\u0026#34; sizes=\u0026#34;32x32\u0026#34;\u0026gt; \u0026lt;link rel=\u0026#34;icon\u0026#34; type=\u0026#34;image/png\u0026#34; href=\u0026#34;/favicon-16x16.png\u0026#34; sizes=\u0026#34;16x16\u0026#34;\u0026gt; \u0026lt;link rel=\u0026#34;manifest\u0026#34; href=\u0026#34;/manifest.json\u0026#34;\u0026gt; \u0026lt;link rel=\u0026#34;mask-icon\u0026#34; href=\u0026#34;/safari-pinned-tab.svg\u0026#34; color=\u0026#34;#5bbad5\u0026#34;\u0026gt; \u0026lt;meta name=\u0026#34;theme-color\u0026#34; content=\u0026#34;#000000\u0026#34;\u0026gt;   The website also shows previews of how the icon would look on different platforms: regular browser tabs, iOS, Android, etc.\nHere is how this favicon looks on Android Chrome after updating the icons and this website\u0026rsquo;s \u0026lt;head\u0026gt;.\n","permalink":"https://dvesti.github.io/prorab/generating-a-transparent-favicon/","tags":["favicon","transparent","browser"],"title":"Generating a transparent favicon"},{"categories":["blog"],"contents":"Update: This first post was created using octopress, but now I am using hugo.\nTesting the first post using octopress.\n","permalink":"https://dvesti.github.io/prorab/first-post/","tags":["test"],"title":"First Post"},{"categories":["blog"],"contents":"Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Aenean eu leo quam. Pellentesque ornare sem lacinia quam venenatis vestibulum. Sed posuere consectetur est at lobortis. Cras mattis consectetur purus sit amet fermentum.\n Curabitur blandit tempus porttitor. Nullam quis risus eget urna mollis ornare vel eu leo. Nullam id dolor id nibh ultricies vehicula ut id elit.\n Etiam porta sem malesuada magna mollis euismod. Cras mattis consectetur purus sit amet fermentum. Aenean lacinia bibendum nulla sed consectetur.\nInline HTML elements HTML defines a long list of available inline tags, a complete list of which can be found on the Mozilla Developer Network.\n To bold text, use \u0026lt;strong\u0026gt;. To italicize text, use \u0026lt;em\u0026gt;. Abbreviations, like HTMLshould use \u0026lt;abbr\u0026gt;, with an optional title attribute for the full phrase. Citations, like — Mark otto, should use \u0026lt;cite\u0026gt;. Deletedtext should use \u0026lt;del\u0026gt; and insertedtext should use \u0026lt;ins\u0026gt;. Superscript textuses \u0026lt;sup\u0026gt; and subscript textuses \u0026lt;sub\u0026gt;.  Most of these elements are styled by browsers with few modifications on our part.\nHeading Vivamus sagittis lacus vel augue rutrum faucibus dolor auctor. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\nCode Cum sociis natoque penatibus et magnis dis code element montes, nascetur ridiculus mus.\n1 2 3 4 5 6 7 8  // Example can be run directly in your JavaScript console  // Create a function that takes two arguments and returns the sum of those arguments var adder = new Function(\u0026#34;a\u0026#34;, \u0026#34;b\u0026#34;, \u0026#34;return a + b\u0026#34;); // Call the function adder(2, 6); // \u0026gt; 8    Aenean lacinia bibendum nulla sed consectetur. Etiam porta sem malesuada magna mollis euismod. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa.\nLists Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Aenean lacinia bibendum nulla sed consectetur. Etiam porta sem malesuada magna mollis euismod. Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut fermentum massa justo sit amet risus.\n Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Donec id elit non mi porta gravida at eget metus. Nulla vitae elit libero, a pharetra augue.  Donec ullamcorper nulla non metus auctor fringilla. Nulla vitae elit libero, a pharetra augue.\n Vestibulum id ligula porta felis euismod semper. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Maecenas sed diam eget risus varius blandit sit amet non magna.  Cras mattis consectetur purus sit amet fermentum. Sed posuere consectetur est at lobortis.\nInteger posuere erat a ante venenatis dapibus posuere velit aliquet. Morbi leo risus, porta ac consectetur ac, vestibulum at eros. Nullam quis risus eget urna mollis ornare vel eu leo.\nTables Aenean lacinia bibendum nulla sed consectetur. Lorem ipsum dolor sit amet, consectetur adipiscing elit.\nNullam id dolor id nibh ultricies vehicula ut id elit. Sed posuere consectetur est at lobortis. Nullam quis risus eget urna mollis ornare vel eu leo.\n Want to see something else added? Open an issue.","permalink":"https://dvesti.github.io/prorab/2014-01-01-example-content/","tags":["test"],"title":"Example content"},{"categories":["blog"],"contents":"More detail: Syntax Highlighting | Hugo\n1 2 3  function helloWorld () { alert(\u0026#34;Hello, World!\u0026#34;) }   1 2 3 4 5  public class HelloWorld { public static void main(String[] args) { System.out.println(\u0026#34;Hello, World!\u0026#34;); } }   1 2 3 4 5  package hello fun main(args: Array\u0026lt;String\u0026gt;) { println(\u0026#34;Hello World!\u0026#34;) }   1 2 3 4 5 6 7  #include \u0026lt;stdio.h\u0026gt; /* Hello */ int main(void){ printf(\u0026#34;Hello, World!\u0026#34;); return 0; }   1 2 3 4 5 6 7 8  // \u0026#39;Hello World!\u0026#39; program  #include \u0026lt;iostream\u0026gt; int main(){ std::cout \u0026lt;\u0026lt; \u0026#34;Hello World!\u0026#34; \u0026lt;\u0026lt; std::endl; return 0; }   1 2 3 4 5 6  using System; class HelloWorld{ public static void Main(){ System.Console.WriteLine(\u0026#34;Hello, World!\u0026#34;); } }   1 2 3 4 5  \u0026lt;html\u0026gt; \u0026lt;body\u0026gt; Hello, World! \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;   1 2 3 4 5 6 7  package main import fmt \u0026#34;fmt\u0026#34; func main() { fmt.Printf(\u0026#34;Hello, World!\\n\u0026#34;); }   1 2 3  object HelloWorld with Application { Console.println(\u0026#34;Hello, World!\u0026#34;); }   1 2 3  \u0026lt;?php echo \u0026#39;Hello, World!\u0026#39;; ?\u0026gt;  1  print(\u0026#34;Hello, World!\u0026#34;)   no named code block ## this is a comment $ echo this is a command this is a command ## edit the file $vi foo.md +++ date = \u0026quot;2014-09-28\u0026quot; title = \u0026quot;creating a new theme\u0026quot; +++ bah and humbug :wq ## show it $ cat foo.md +++ date = \u0026quot;2014-09-28\u0026quot; title = \u0026quot;creating a new theme\u0026quot; +++ bah and humbug $ highlight shortcode example:\n{{\u0026lt; highlight go \u0026quot;linenos=table,hl_lines=8 15-17,linenostart=199\u0026quot; \u0026gt;}} // ... code {{\u0026lt; /highlight \u0026gt;}} result:\n199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220  GetTitleFunc returns a func that can be used to transform a string to title case. The supported styles are - \u0026#34;Go\u0026#34; (strings.Title) - \u0026#34;AP\u0026#34; (see \u0026lt;https://www.apstylebook.com/)\u0026gt;  - \u0026#34;Chicago\u0026#34; (see \u0026lt;http://www.chicagomanualofstyle.org/home.html)\u0026gt;  If an unknown or empty style is provided, AP style is what you get. func GetTitleFunc(style string) func(s string) string { switch strings.ToLower(style) { case \u0026#34;go\u0026#34;: return strings.Title case \u0026#34;chicago\u0026#34;: tc := transform.NewTitleConverter(transform.ChicagoStyle) return tc.Title  default: tc := transform.NewTitleConverter(transform.APStyle) return tc.Title } }   ","permalink":"https://dvesti.github.io/prorab/syntax-highlighting/","tags":["preview","highlighting"],"title":"Syntax Highlighting"},{"categories":null,"contents":"Results from static site search implemented using Fusejs, jquery and mark.js. \u0026ndash; Source\n","permalink":"https://dvesti.github.io/prorab/search/","tags":null,"title":"Поиск"}]