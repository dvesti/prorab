# Paste the below in https://play.netlify.com/headers to test
# Set max-age to 1 year for stuff not expected to update any time soon.
/css/*
  Cache-Control: public, max-age=31536000

/js/*
  Cache-Control: public, max-age=31536000

/fonts/*
  Cache-Control: public, max-age=31536000

# Favicons
/favicon.*
  Cache-Control: public, max-age=31536000
/favicon-*.png
  Cache-Control: public, max-age=31536000
/mstile-*.png
  Cache-Control: public, max-age=31536000
/apple-touch-icon.png
  Cache-Control: public, max-age=31536000
/manifest.json
  Cache-Control: public, max-age=31536000

# Also these images used by the refined theme won't be updated frequently.
/images/*
  Cache-Control: public, max-age=31536000

# https://webbkoll.dataskydd.net/en/results?url=https%3A%2F%2Fscripter.co%2F
# Security Headers: https://securityheaders.com/?q=https%3A%2F%2Fscripter.co&followRedirects=on

## https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referrer-Policy
/*
  Referrer-Policy: same-origin

## https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options
# I never intend to show any of the pages on my site in a <frame> on my site or
# elsewhere.
/*
  X-Frame-Options: DENY

## https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-XSS-Protection
/*
  X-Xss-Protection: 1; mode=block

## https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Content-Type-Options
/*
  X-Content-Type-Options: nosniff

# An example CSP from https://vincent.bernat.im/en/blog/2018-more-privacy-blog#memento-csp:
#   Content-Security-Policy:
#     default-src 'self' blob:;
#     script-src  'self' blob: https://d1g3mdmxf8zbo9.cloudfront.net/js/;
#     object-src  'self' https://d1g3mdmxf8zbo9.cloudfront.net/images/;
#     img-src     'self' data: https://d1g3mdmxf8zbo9.cloudfront.net/images/;
#     frame-src   https://d1g3mdmxf8zbo9.cloudfront.net/images/;
#     style-src   'self' 'unsafe-inline' https://d1g3mdmxf8zbo9.cloudfront.net/css/;
#     font-src    'self' about: data: https://d1g3mdmxf8zbo9.cloudfront.net/fonts/;
#     worker-src  blob:;
#     media-src   'self' blob: https://luffy-video.sos-ch-dk-2.exo.io;
#     connect-src 'self' https://luffy-video.sos-ch-dk-2.exo.io https://comments.luffy.cx;
#     frame-ancestors 'none';
#     block-all-mixed-content;

# https://scotthelme.co.uk/content-security-policy-an-introduction/
## https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy
# Set the header to Content-Security-Policy-Report-Only
# instead of Content-Security-Policy when debugging -
# https://scotthelme.co.uk/content-security-policy-an-introduction/#testingapolicy
/*
  # default-src: Define loading policy for all resources type in case of a resource type dedicated directive is not defined (fallback)
  # script-src: Define which scripts the protected resource can execute
  # Need to add 'unsafe-eval' to script-src, else MathJax won't work :(
  # object-src: Define from where the protected resource can load plugins. Specifies valid sources for the <object>, <embed>, and <applet> elements.
  # style-src: Define which styles (CSS) the user applies to the protected resource
  # img-src: Define from where the protected resource can load images
  # Netlify hosts images at an arbitrary https://*.cloudfront.net domain if asset/image
  # optimization is enabled. If so, I cannot know for sure what domain to
  # add below in the img-src rule. So ensure that asset optimization is
  # DISABLED on Netlify.
  # font-src: Define from where the protected resource can load fonts
  # https://cdnjs.cloudflare.com/ajax/libs/mathjax/ needed to load MathJax fonts.
  # connect-src: Define which URIs the protected resource can load using script interfaces
  # form-action: Define which URIs can be used as the action of HTML form elements
  # https://webmention.io/scripter.co/webmention <- For sending webmentions
  # https://quill.p3k.io/ <- For sending comments via commentpara.de
  # # sandbox: Specifies an HTML sandbox policy that the user agent applies to the protected resource
  # sandbox
  # # script-nonce: Define script execution by requiring the presence of the specified nonce on script elements
  # script-nonce
  # # plugin-types: Define the set of plugins that can be invoked by the protected resource by limiting the types of resources that can be embedded
  # plugin-types
  # # reflected-xss: Instructs a user agent to activate or deactivate any heuristics used to filter or block reflected cross-site scripting attacks equivalent to the effects of the non-standard X-XSS-Protection header
  # reflected-xss
  # # report-uri: Specifies a URI to which the user agent sends reports about policy violation
  # report-uri
  # frame-ancestors: Specifies valid parents that may embed a page using <frame>, <iframe>, <object>, <embed>, or <applet>.
  # block-all-mixed-content: Prevents loading any assets using HTTP when the page is loaded using HTTPS.
  # base-uri: When set to 'none', restricts the use of <base> tag. https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/base-uri
  Content-Security-Policy: default-src 'none'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdnjs.cloudflare.com/ajax/libs/mathjax/; object-src 'none'; style-src 'self' 'unsafe-inline'; img-src 'self'; font-src 'self' https://cdnjs.cloudflare.com/ajax/libs/mathjax/; connect-src 'self'; form-action 'self' https://webmention.io/scripter.co/webmention https://quill.p3k.io/; frame-ancestors 'none'; base-uri 'none'; block-all-mixed-content;

  # Commenting the below out till I am sure that I am not sourcing any image
  # from outside my domain - Thu Apr 26 18:04:58 EDT 2018 - kmodi
  # # media-src: Define from where the protected resource can load video and audio
  # media-src
  # # frame-src: Define from where the protected resource can embed frames
  # frame-src

# ## https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Expect-CT
# /*
#   Expect-CT: enforce,max-age=604800
